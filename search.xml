<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c#面向对象知识点</title>
      <link href="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="c-面向对象"><a href="#c-面向对象" class="headerlink" title="c#面向对象"></a>c#面向对象</h1><p>面向过程是什么？强调完成这件事的动作。把大象塞在冰箱里面。</p><p>面向对象：找个对象帮自己做事。万物皆为对象。写一个通用的代码，屏蔽差异。</p><p>属性—对象所具有的具体特征。方法—对象的方法。</p><p>对象一定是看得见，摸得着的。</p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>类中可以写属性，方法和字段。</p><p>属性的作用：保护字段，对字段的赋值和取值进行限定。</p><p>属性的本质为两个方法，一个叫get(),一个叫set()。</p><p>属性相当于一个过度，对字段进行再次处理。</p><p>字段在类里面做，主要用于存储。属性和外界打交道。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//语法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> _name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _age;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">char</span> _gender; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//当输出属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _name;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//当给予属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                _name = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">CHLSS</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;我叫&#123;0&#125;，我今年&#123;1&#125;岁,性别为&#123;2&#125;&quot;</span>,<span class="keyword">this</span>._name,<span class="keyword">this</span>._age,<span class="keyword">this</span>._gender);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类的实例化</span></span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            person suquan = <span class="keyword">new</span> person();</span><br><span class="line">            suquan._gender = <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">            suquan._age = <span class="number">20</span>;</span><br><span class="line">            suquan._name = <span class="string">&quot;苏全&quot;</span>;</span><br><span class="line">            suquan.CHLSS();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>类不占内存，对象占用内存。（类中的字段占用内存）</p><p>结构不具有面向对象的任何一个特称</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">struct</span> person</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> _name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _age;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">char</span> _gender; </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">CHLSS</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;我叫&#123;0&#125;，我今年&#123;1&#125;岁,性别为&#123;2&#125;&quot;</span>,<span class="keyword">this</span>._name,<span class="keyword">this</span>._age,<span class="keyword">this</span>._gender);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>访问修饰符：</p><p>public：公开的 </p><p>private：私有的，出了类就访问不到了</p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> _name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//当输出属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _name;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//当给予属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                _name = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _age;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Age</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//当输出属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _age;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//当给予属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt; <span class="number">0</span> || <span class="keyword">value</span> &gt;= <span class="number">100</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">value</span> = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                _age = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">char</span> _gender;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">char</span> Gender</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//当输出属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _gender;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//当给予属性的时候，调用这个方法</span></span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="string">&#x27;男&#x27;</span> &amp;&amp; <span class="keyword">value</span> != <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">value</span> = <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                _gender = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">CHLSS</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;我叫&#123;0&#125;，我今年&#123;1&#125;岁,性别为&#123;2&#125;&quot;</span>,<span class="keyword">this</span>.Name,<span class="keyword">this</span>.Age,<span class="keyword">this</span>.Gender);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           Person suquan = <span class="keyword">new</span> Person</span><br><span class="line">           &#123;</span><br><span class="line">               Gender = <span class="string">&#x27;妖&#x27;</span>,</span><br><span class="line">               Age = <span class="number">-20</span>,</span><br><span class="line">               Name = <span class="string">&quot;苏全&quot;</span></span><br><span class="line">           &#125;;   </span><br><span class="line">           suquan.CHLSS();</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>1.当字段设置为私有的时候，主函数只能通过属性来获取和设置字段的值</p><p>2.属性可以不写，如果只写get，代表只是可读。如果只写set，代表只是可写。</p><p>3.属性利用用value来赋值，可以写判断方法</p><p>4.字段前面一般加_，属性则首字母大写</p><p>5.属性和方法的局部变量区分开来，前面要加this</p><h2 id="静态方法和非静态方法"><a href="#静态方法和非静态方法" class="headerlink" title="静态方法和非静态方法"></a>静态方法和非静态方法</h2><h3 id="一、在非静态类中，既可以有实例成员，也可以有非实例成员。"><a href="#一、在非静态类中，既可以有实例成员，也可以有非实例成员。" class="headerlink" title="一、在非静态类中，既可以有实例成员，也可以有非实例成员。"></a>一、在非静态类中，既可以有实例成员，也可以有非实例成员。</h3><p>调用实例成员，要用对象名.实例成员；</p><p>调用静态成员 ，要用类名.静态成员；</p><p>字段也可以为静态字段和非静态字段；</p><p>静态成员必须用类名去调用，实例成员用对象名去调用。</p><p>静态函数，只能访问静态成员，不能访问实例成员。</p><p>实例函数，可以使用静态方法，也可以使用实例方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">namespace</span> 静态变量和非静态变量</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> _name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _age;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">M1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            _age = <span class="number">2</span>;</span><br><span class="line">            _name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">M2</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            _name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//主文件</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">namespace</span> 静态变量和非静态变量</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Person a = <span class="keyword">new</span> Person();</span><br><span class="line">            a.M1();<span class="comment">//实例方法</span></span><br><span class="line">            Person.M2();<span class="comment">//静态方法</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、在静态类中"><a href="#二、在静态类中" class="headerlink" title="二、在静态类中"></a>二、在静态类中</h3><p>静态类中只允许出现静态成员，不能出现实例成员。</p><p>静态类调用用，直接用类名去调用，不用在声明。</p><p>总结：</p><p>如果想要类当作一个“工具类”去使用，可以考虑将其写成静态类</p><p>静态类在整个项目中资源共享。静态类和非静态类不一样，静态类由于不用声明却有字段，所以静态类是占用内存的。 </p><p>静态类越少越好，多了占内存卡。只有程序全部结束之后，静态类才会释放资源。</p><p>释放资源。GC（Garbage Collection）垃圾回收器</p><p>堆 栈 静态存储区</p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>构造函数帮助构造对象（给对象的每个属性依次的赋值）</p><p>构造函数是一个特殊的方法：</p><p>1.构造函数没有返回值，void不用写</p><p>2.构造函数的名称必须和类名一样</p><p>3.构造函数是可以重载的</p><p>*** 类本身会有一个默认的无参的构造函数，写了构造函数后，无参构造函数就没了 ***</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 构造函数</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> password, <span class="built_in">string</span> tel</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Name = name; </span><br><span class="line">            <span class="keyword">this</span>.Password = password;</span><br><span class="line">            <span class="keyword">this</span>.Tel = tel;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Password &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Tel &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PrintMsg</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;用户名：&quot;</span> + <span class="keyword">this</span>.Name);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;密  码：&quot;</span> + <span class="keyword">this</span>.Password);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;手机号：&quot;</span> + <span class="keyword">this</span>.Tel);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 构造函数</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User(<span class="string">&quot;小明&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;13131351111&quot;</span>);</span><br><span class="line">            user.PrintMsg();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="new关键字"><a href="#new关键字" class="headerlink" title="new关键字"></a>new关键字</h2><p>User user &#x3D; new User(“小明”, “123456”, “13131351111”);</p><p>三件事情：</p><p>1.在内存中开辟一块空间</p><p>2.在开辟的空间中创建对象</p><p>3.调用对象的构造函数进行初始化对象</p><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><p>1.this指代当前类的对象</p><p>2.在类中显示的调用本类的构造函数 ：this</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">namespace</span> 构造函数</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> password, <span class="built_in">string</span> tel</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Name = name;</span><br><span class="line">            <span class="keyword">this</span>.Password = password;</span><br><span class="line">            <span class="keyword">this</span>.Tel = tel;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">User</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> password</span>):<span class="title">this</span>(<span class="params">name,<span class="string">&quot;afds&quot;</span>,<span class="string">&quot;2123&quot;</span></span>)</span></span><br><span class="line">        &#123;            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Password &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Tel &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PrintMsg</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;用户名：&quot;</span> + <span class="keyword">this</span>.Name);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;密  码：&quot;</span> + <span class="keyword">this</span>.Password);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;手机号：&quot;</span> + <span class="keyword">this</span>.Tel);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><p>析构函数在程序结束的时候执行</p><p>帮助释放资源</p><h2 id="基础总结"><a href="#基础总结" class="headerlink" title="基础总结"></a>基础总结</h2><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220608222049375.png" alt="sdd"></p><h2 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h2><p>namespace(命名空间)，用于解决类重名的问题，可以看做“类的文件夹”。</p><p>如果类没有命名空间，需要我们手动导入这个类所在的命名空间。</p><p>（1）、鼠标点</p><p>（2）、alt+shift+f10</p><p>（3）、自己写</p><h2 id="在一个项目中引用另一个项目的类"><a href="#在一个项目中引用另一个项目的类" class="headerlink" title="在一个项目中引用另一个项目的类"></a>在一个项目中引用另一个项目的类</h2><p>（1）添加引用</p><p>（2） 添加命名空间</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609103929209.png" alt="233"></p><h2 id="值类型与引用类型"><a href="#值类型与引用类型" class="headerlink" title="值类型与引用类型"></a>值类型与引用类型</h2><p>区别：</p><p>1.值类型和引用类型在内存上存储的地方不一样。</p><p>2.在传递值类型和传递引用类型的时候，传递的方式不一样。</p><p>值类型称为值传递，引用类型称为引用传递。</p><p>值类型： int，double，bool，char，decimal，struct，enum</p><p>引用类型：string，自定义类，数组</p><p>存储：</p><p>值类型的值存储在内存的栈中</p><p>引用类型的值存储在内存的堆中</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609104528744.png" alt="233"></p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>一、字符串的不可变性</p><p>给一个字符串重新赋值后。老值并没有销毁，而是重新开辟一块空间进行存储。</p><p>程序结束后，GC扫描整个内存，如果有空间没有被指向，则立即销毁。</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609105029740.png" alt="233"></p><p>二、可以将字符串看做是char类型的一个只读数组。</p><p> char[] chs &#x3D;s.ToCharArray();</p><p>  s &#x3D; new string(chs);</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> s=<span class="string">&quot;abcd&quot;</span>;</span><br><span class="line"><span class="comment">//s[0]=d; 这是错误的</span></span><br><span class="line">Console.WriteLine(s[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 字符串</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//先将字符串转换为字符数组，改变值后在转换为字符串</span></span><br><span class="line">            <span class="built_in">string</span> s = <span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line">            <span class="built_in">char</span>[] chs =s.ToCharArray();</span><br><span class="line">            chs[<span class="number">0</span>]= <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">            s = <span class="keyword">new</span> <span class="built_in">string</span>(chs);</span><br><span class="line">            Console.WriteLine(s);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = s.ToUpper();<span class="comment">//转换为大写</span></span><br><span class="line">s = s.ToLower();<span class="comment">//转换为小写</span></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//字符串比较</span></span><br><span class="line"><span class="keyword">if</span> (s.Equals(<span class="string">&quot;asd&quot;</span>))</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (s.Equals(<span class="string">&quot;asd&quot;</span>,StringComparison.OrdinalIgnoreCase))</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;  <span class="comment">//比较时忽略大小写</span></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串分割Split,返回字符串类型的数组</span></span><br><span class="line"><span class="built_in">string</span> s1 = <span class="string">&quot;a d  _  asf &#123; fasd d ) （&quot;</span>;</span><br><span class="line"><span class="built_in">char</span>[] chs1 = &#123; <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span> &#125;;</span><br><span class="line"><span class="built_in">string</span>[] str = s1.Split(chs1,StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">Console.WriteLine(str[<span class="number">3</span>]);</span><br><span class="line">Console.WriteLine(s);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.将“2008-08-08”转换为2008年8月8日</span></span><br><span class="line"> <span class="built_in">string</span> s = <span class="string">&quot;2008-08-08&quot;</span>;</span><br><span class="line"> String[] date=s.Split(<span class="keyword">new</span> <span class="built_in">char</span>[] &#123;<span class="string">&#x27;-&#x27;</span>&#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line"> Console.WriteLine(<span class="string">&quot;&#123;0&#125;年&#123;1&#125;月&#123;2&#125;日&quot;</span>, date[<span class="number">0</span>], date[<span class="number">1</span>], date[<span class="number">2</span>]);</span><br><span class="line"> Console.ReadKey();</span><br></pre></td></tr></table></figure><h2 id="StringBuilder"><a href="#StringBuilder" class="headerlink" title="StringBuilder"></a>StringBuilder</h2><p>一切类型都可以用ToString()转换为字符串。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">stringbuilder</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="built_in">string</span> str = <span class="literal">null</span>;</span><br><span class="line">            <span class="comment">//创建一个计时器，用来记录程序运行的时间</span></span><br><span class="line">            Stopwatch sw = <span class="keyword">new</span> Stopwatch();</span><br><span class="line">            sw.Start();</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                sb.Append(i);</span><br><span class="line">            &#125;</span><br><span class="line">            sw.Stop();<span class="comment">//结束计时</span></span><br><span class="line">            Console.WriteLine(sw.Elapsed);</span><br><span class="line">            Console.WriteLine(sb.ToString());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串常用的方法"><a href="#字符串常用的方法" class="headerlink" title="字符串常用的方法"></a>字符串常用的方法</h2><p>1.查询并且替换</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609114723594.png" alt="233"></p><p>2.截取字符串</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609114838446.png" alt="233"></p><p>3.判断是否以此开始</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609114913437.png" alt="233"></p><p>4.找索引</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609115022664.png" alt="233"></p><p>5.找最后一个的索引<br><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609135436419.png" alt="233"></p><p>6.去除前导的空格和后导的空格</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609135709709.png" alt="233"></p><p>7.判断字符串是否为空</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609135808263.png" alt="233"></p><p>8.将数组按照指定的字符串连接，返回一个字符串</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609140351203.png" alt="233"></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>把重复的成员，单独的封装到一个类中，作为这些类的父类。 </p><p>可以叫做子类和父类；派生类和基类；</p><p>子类继承了父类的属性方法，但是子类不继承父类的私有字段。</p><p>子类是否继承了父类的构造函数？</p><p>子类并没有继承父类的构造函数，但是，子类会默认的调用父类无参数的构造函数。创建父类对象，让子类可以使用父类的成员。</p><p>如果在父类中重新写一个有参数的构造函数之后，无参数的构造函数就被干掉了。子类调用不到，就会报错。</p><p>解决方法：</p><p>在父类重新写一个无参数的构造函数。</p><p>在子类中显示的调用父类的构造函数，用关键字base();</p><h3 id="继承的特性"><a href="#继承的特性" class="headerlink" title="继承的特性"></a>继承的特性</h3><p>1.继承的单根性：</p><p>一个子类只能有一个父类</p><p>2.继承的传递性</p><h3 id="查看类图"><a href="#查看类图" class="headerlink" title="查看类图"></a>查看类图</h3> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 继承</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _age;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> _name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">char</span> _gender;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">int</span> age,<span class="built_in">string</span> name,<span class="built_in">char</span> gender</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Age = age;</span><br><span class="line">            <span class="keyword">this</span>.Name = name;</span><br><span class="line">            <span class="keyword">this</span>.Gender = gender;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Age</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> _age;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123;</span><br><span class="line">                _age = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">return</span> _name;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                _name = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">char</span> Gender</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _gender;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                _gender = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Money</span>:<span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> _money;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Money</span>(<span class="params"><span class="built_in">int</span> age, <span class="built_in">string</span> name, <span class="built_in">char</span> gender,<span class="built_in">decimal</span> money</span>)</span></span><br><span class="line"><span class="function">            :<span class="title">base</span>(<span class="params">age,name,gender</span>)<span class="comment">//继承父类的构造函数参数</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Monry = money;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> Monry</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _money;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                _money = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">decimal</span> <span class="title">Money_1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            _money = <span class="number">1000</span>m;</span><br><span class="line">            <span class="keyword">return</span> _money;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> Object类是所有类的基类，如果没有写继承类则自动继承基类Object。</p><h2 id="new关键字-1"><a href="#new关键字-1" class="headerlink" title="new关键字"></a>new关键字</h2><p>new关键字的作用：</p><p>1.创建对象</p><p>2.隐藏从父类那里继承过来的同名成员</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220609162107078.png" alt="233"></p><p>1.子类可以赋值给父类</p><p>2.如果父类装的是子类对象，那么可以将这个父类强转为子类对象。 </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 里氏转换</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Student s = <span class="keyword">new</span> Student();</span><br><span class="line">            <span class="comment">//1.子类可以赋值给父类</span></span><br><span class="line">            Person p = s;</span><br><span class="line">            Person q = <span class="keyword">new</span> Student();</span><br><span class="line">            <span class="comment">//2.如果父类中的装的是子类对象，那么这个父类可以强转为子类对象</span></span><br><span class="line">            Student ss = (Student)p;</span><br><span class="line">            ss.M2();</span><br><span class="line">            <span class="comment">//is，表示类型转换，如果能转换成功，就返回true，不能就返回false</span></span><br><span class="line">            <span class="keyword">if</span>(p <span class="keyword">is</span> Teacher)</span><br><span class="line">            &#123;</span><br><span class="line">                Teacher sss = (Teacher)p; </span><br><span class="line">                sss.M1();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;转换失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//as, 表示类型转换，如果能够转换则返回对应的对象，否则返回一个null</span></span><br><span class="line">            Teacher t = p <span class="keyword">as</span> Teacher;</span><br><span class="line">            Console.WriteLine(t);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">M1</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">Person</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">M2</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Teacher</span>:<span class="title">Person</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">M3</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>P120里氏转换练习</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person[] pers=<span class="keyword">new</span> Person[<span class="number">10</span>];<span class="comment">//对象数组</span></span><br></pre></td></tr></table></figure><h2 id="protected修饰符"><a href="#protected修饰符" class="headerlink" title="protected修饰符"></a>protected修饰符</h2><p>受保护的：可以在当前类的内部以及该类的子类中去访问</p><h2 id="ArrayList集合"><a href="#ArrayList集合" class="headerlink" title="ArrayList集合"></a>ArrayList集合</h2><p>数组：长度不可变，类型单一<br>集合的好处：长度可变，类型可变</p><p>集合的方法：</p><p>list.Add(list);<br>list.AddRange(new int[] { 1, 2, 3, 4, 5, 6, 7 });&#x2F;&#x2F;集合添加一个集合<br>list.AddRange(list);<br>list.Remove(true);&#x2F;&#x2F;除去一个元素，内容是什么就除去什么<br>list.RemoveAt(0);&#x2F;&#x2F;除去索引的元素<br>list.RemoveRange(0, 3);&#x2F;&#x2F;除去一定范围的元素<br>&#x2F;&#x2F;list.Sort();&#x2F;&#x2F;元素的升序排列，要求元素之前可以比较<br>list.Reverse();&#x2F;&#x2F;元素的翻转<br>list.Insert(1, “插入的”);&#x2F;&#x2F;在索引1处插入元素<br>list.InsertRange(0, new string[] { “a”, “b”, “c”, “d”, “e” });&#x2F;&#x2F;在索引0后插入一个集合<br>bool b &#x3D; list.Contains(1);&#x2F;&#x2F;布尔类型，判断集合中是否含有1</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayList</span>集合</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//创建一个集合对象</span></span><br><span class="line">            ArrayList list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            <span class="comment">//集合：很多数据的集合</span></span><br><span class="line">            <span class="comment">//数组：长度不可变，类型单一</span></span><br><span class="line">            <span class="comment">//集合的好处：长度可变，类型可变</span></span><br><span class="line">            list.Add(<span class="number">1</span>);<span class="comment">//集合添加元素</span></span><br><span class="line">            list.Add(<span class="number">3.14</span>);</span><br><span class="line">            list.Add(<span class="literal">true</span>);</span><br><span class="line">            list.Add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">            list.Add(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">            list.Add(<span class="number">5000</span>m);    </span><br><span class="line">            list.Add(<span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;);<span class="comment">//声明一个数组</span></span><br><span class="line">            Person p = <span class="keyword">new</span> Person(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">            list.Add(p);</span><br><span class="line">            list.Add(list);</span><br><span class="line">            list.AddRange(<span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> &#125;);<span class="comment">//集合添加一个集合</span></span><br><span class="line">            list.AddRange(list);</span><br><span class="line">            list.Remove(<span class="literal">true</span>);<span class="comment">//除去一个元素，内容是什么就除去什么</span></span><br><span class="line">            list.RemoveAt(<span class="number">0</span>);<span class="comment">//除去索引的元素</span></span><br><span class="line">            list.RemoveRange(<span class="number">0</span>, <span class="number">3</span>);<span class="comment">//除去一定范围的元素</span></span><br><span class="line">            <span class="comment">//list.Sort();//元素的升序排列，要求元素之前可以比较</span></span><br><span class="line">            list.Reverse();<span class="comment">//元素的翻转</span></span><br><span class="line">            list.Insert(<span class="number">1</span>, <span class="string">&quot;插入的&quot;</span>);<span class="comment">//在索引1处插入元素</span></span><br><span class="line">            list.InsertRange(<span class="number">0</span>, <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span> &#125;);<span class="comment">//在索引0后插入一个集合</span></span><br><span class="line">            <span class="built_in">bool</span> b = list.Contains(<span class="number">1</span>);<span class="comment">//布尔类型，判断集合中是否含有1</span></span><br><span class="line">            Console.WriteLine(b);</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(list[i] <span class="keyword">is</span> Person)<span class="comment">//list[i]是Object类型，是Person的父类</span></span><br><span class="line">                &#123;</span><br><span class="line">                    ((Person)list[i]).M1();</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//Console.WriteLine(list[i]);</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> _a;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> A</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">get</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> _a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">set</span></span><br><span class="line">                &#123;</span><br><span class="line">                    _a = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">string</span> a</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>._a = a;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">M1</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;2333&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ArrayList集合的长度"><a href="#ArrayList集合的长度" class="headerlink" title="ArrayList集合的长度"></a>ArrayList集合的长度</h2><p>Capacity</p><p>可以包含的空间，每当超过可包含的数量，就向内存申请1倍的空间，以保证集合的长度够用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayList</span>集合的长度</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ArrayList list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            list.Add(<span class="number">1</span>);</span><br><span class="line">            list.Add(<span class="number">1</span>);</span><br><span class="line">            list.Add(<span class="number">1</span>);</span><br><span class="line">            list.Add(<span class="number">1</span>);</span><br><span class="line">            list.Add(<span class="number">1</span>);</span><br><span class="line">            Console.WriteLine(list.Count);</span><br><span class="line">            Console.WriteLine(list.Capacity);<span class="comment">//可以包含的空间，每当超过可包含的数量，就向内存申请1倍的空间</span></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HashTable集合"><a href="#HashTable集合" class="headerlink" title="HashTable集合"></a><strong>HashTable</strong>集合</h2><p>键值对集合 字典</p><p>sun–孙</p><p>meng–萌</p><p>foreach的效率远远高于for循环，特别实在大量数据的时候。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HashTable</span>集合</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//1.创建键值对对象</span></span><br><span class="line">            Hashtable ht = <span class="keyword">new</span> Hashtable();</span><br><span class="line">            ht.Add(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">            ht.Add(<span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">            ht.Add(<span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            ht.Add(<span class="literal">false</span>, <span class="string">&quot;错误的&quot;</span>);</span><br><span class="line">            ht[<span class="number">6</span>] = <span class="string">&quot;新来的&quot;</span>;<span class="comment">//添加元素的新方式</span></span><br><span class="line">            ht[<span class="number">1</span>] = <span class="string">&quot;替代张三&quot;</span>;</span><br><span class="line">            <span class="comment">//2.根据键去找值</span></span><br><span class="line">            Console.WriteLine(ht[<span class="literal">false</span>]);</span><br><span class="line">            <span class="comment">//3.foreach循环</span></span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> ht.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;键是&#123;0&#125;,值是&#123;1&#125;&quot;</span>,item,ht[item]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> ht.Values)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(item);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//4.常用方法</span></span><br><span class="line">            <span class="keyword">if</span> (!ht.ContainsKey(<span class="string">&quot;abc&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                ht.Add(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//ht.Clear();移除集合中的所有元素</span></span><br><span class="line">            ht.Remove(<span class="number">3</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;====================================&quot;</span>);</span><br><span class="line">            <span class="comment">//for (int i = 0; i &lt; ht.Count; i++)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    Console.WriteLine(ht[i]);</span></span><br><span class="line">            <span class="comment">//&#125;//没有打印出false</span></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="强类型语言与弱类型语言"><a href="#强类型语言与弱类型语言" class="headerlink" title="强类型语言与弱类型语言"></a>强类型语言与弱类型语言</h2><p>强类型语言对变量有明确的定义—-c#</p><p>弱类型语言对变量没有明确的定义—-js</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a=<span class="number">1</span>;</span><br><span class="line">Consloe.WriteLine(a.GetType());</span><br><span class="line"><span class="comment">//var根据值可以推断出来类型</span></span><br></pre></td></tr></table></figure><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220610110031997.png" alt="233"></p><p>var声明的时候必须赋值才行</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220610110210131.png" alt="233"></p><h2 id="泛型集合-List-lt-T-gt"><a href="#泛型集合-List-lt-T-gt" class="headerlink" title="泛型集合 List&lt;T&gt;"></a>泛型集合 List&lt;T&gt;</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">List</span>泛型集合</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//创建泛型集合对象</span></span><br><span class="line">            List&lt;<span class="built_in">int</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">            list.Add(<span class="number">1</span>);</span><br><span class="line">            list.AddRange(<span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span> &#125;);</span><br><span class="line">            list.AddRange(list);</span><br><span class="line">            <span class="comment">//其他方法差不多</span></span><br><span class="line">            <span class="comment">//List泛型集合可以转换为数组,数组可以转换为集合</span></span><br><span class="line">            <span class="built_in">int</span>[] nums = list.ToArray();</span><br><span class="line">            <span class="built_in">char</span>[] chs = <span class="keyword">new</span> <span class="built_in">char</span>[] &#123; <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span> &#125;;</span><br><span class="line">            List&lt;<span class="built_in">char</span>&gt; listchar = chs.ToList();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Path类"><a href="#Path类" class="headerlink" title="Path类"></a>Path类</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Path</span>类</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">@&quot;E:\pictures\260.jpg&quot;</span>;</span><br><span class="line">            <span class="comment">//获取文件名</span></span><br><span class="line">            Console.WriteLine(Path.GetFileName(str));</span><br><span class="line">            <span class="comment">//不包括扩展名</span></span><br><span class="line">            Console.WriteLine(Path.GetFileNameWithoutExtension(str));</span><br><span class="line">            <span class="comment">//获取扩展名</span></span><br><span class="line">            Console.WriteLine(Path.GetExtension(str));</span><br><span class="line">            <span class="comment">//获取文件所在文件夹的名称</span></span><br><span class="line">            Console.WriteLine(Path.GetDirectoryName(str));</span><br><span class="line">            <span class="comment">//获取文件的全路径 </span></span><br><span class="line">            Console.WriteLine(Path.GetFullPath(str));</span><br><span class="line">            <span class="comment">//链接两个字符串作为路径</span></span><br><span class="line">            Console.WriteLine(Path.Combine(<span class="string">@&quot;c:\a\&quot;</span>)+<span class="string">&quot;b.txt&quot;</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">File</span>类</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//创建一个文件</span></span><br><span class="line">            File.Create(<span class="string">@&quot;C:\Users\Public\Desktop\new.txt&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;创建成功！&quot;</span>);</span><br><span class="line">            <span class="comment">//删除一个文件</span></span><br><span class="line">            File.Delete(<span class="string">@&quot;C:\Users\Public\Desktop\new.txt&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">            File.Copy(<span class="string">@&quot;C:\Users\Public\Desktop\new.txt&quot;</span>, <span class="string">@&quot;C:\Users\Public\Desktop\new1.txt&quot;</span>);</span><br><span class="line">            <span class="comment">//复制一个文件</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;复制成功！&quot;</span>);</span><br><span class="line">            <span class="comment">//读取文件的内容</span></span><br><span class="line">            <span class="built_in">string</span>[] contents=File.ReadAllLines(<span class="string">@&quot;&quot;</span>);<span class="comment">//读取行</span></span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">string</span> item <span class="keyword">in</span> contents)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">string</span> contents1 = File.ReadAllText(<span class="string">@&quot;&quot;</span>);<span class="comment">//读取所有内容</span></span><br><span class="line">            <span class="comment">//读取字节和写入字节可以用于所有文件</span></span><br><span class="line">            <span class="built_in">byte</span>[] buffer = File.ReadAllBytes(<span class="string">@&quot;&quot;</span>);<span class="comment">//将字节数组中的每一个元素按照指定的编码格式解码成字符串</span></span><br><span class="line">            <span class="built_in">string</span> s = Encoding.GetEncoding(<span class="string">&quot;GB2312&quot;</span>).GetString(buffer);</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;asffafdsa&quot;</span>;</span><br><span class="line">            <span class="built_in">byte</span>[] buffer2 = Encoding.Default.GetBytes(str);</span><br><span class="line">            File.WriteAllBytes(<span class="string">@&quot;&quot;</span>,buffer2);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;写入成功！&quot;</span>);</span><br><span class="line">            <span class="comment">//以行的形式写入</span></span><br><span class="line">            File.WriteAllLines(<span class="string">@&quot;&quot;</span>, <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span> &#125;);</span><br><span class="line">            <span class="comment">//添加内容</span></span><br><span class="line">            File.AppendAllText(<span class="string">@&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220610132956263.png" alt="233"></p><p>乱码是编码格式不匹配导致的。</p><h2 id="绝对路径和相对路径"><a href="#绝对路径和相对路径" class="headerlink" title="绝对路径和相对路径"></a>绝对路径和相对路径</h2><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220610141310472.png" alt="233"></p><p>开发中尽量使用相对路径。</p><h2 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h2><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220610143023419.png" alt="233"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 装箱和拆箱</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> n = <span class="number">10</span>;</span><br><span class="line">            <span class="built_in">object</span> o = n;<span class="comment">//装箱</span></span><br><span class="line">            <span class="built_in">int</span> nn = (<span class="built_in">int</span>)o;<span class="comment">//拆箱</span></span><br><span class="line">            ArrayList list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            <span class="comment">//下面这个循环发生了一百万次装箱 </span></span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                list.Add(i);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>装箱和开箱浪费时间，尽量避免。</p><h2 id="文件流"><a href="#文件流" class="headerlink" title="文件流"></a>文件流</h2><p>（这里没怎么学）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件流</span></span><br><span class="line">       <span class="comment">//读取</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span>   <span class="keyword">void</span> <span class="title">filestreamRead</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">           FileStream fsRead = <span class="keyword">new</span> FileStream(<span class="string">@&quot;C:\Users\Administrator\Desktop\newfile.txt&quot;</span>, FileMode.OpenOrCreate,FileAccess.Read);</span><br><span class="line">           <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];<span class="comment">//读取5M</span></span><br><span class="line">           <span class="comment">//返回本次实际读取到的有效字节数</span></span><br><span class="line">         <span class="built_in">int</span>  r= fsRead.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">           <span class="comment">//将字节数组中的每一个元素按照指定的编码格式解码成字符串</span></span><br><span class="line">           <span class="built_in">string</span> s = Encoding.UTF8.GetString(buffer,<span class="number">0</span>,r);</span><br><span class="line">           <span class="comment">//关闭流</span></span><br><span class="line">           fsRead.Close();</span><br><span class="line">           <span class="comment">//释放流所占用的资源</span></span><br><span class="line">           fsRead.Dispose();</span><br><span class="line">           Console.WriteLine(s);</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//使用StreamReader来读取一个文本文件</span></span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span>   <span class="keyword">void</span> <span class="title">StreamReader</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">using</span> (StreamReader  sr=<span class="keyword">new</span> System.IO.StreamReader(<span class="string">@&quot;C:\Users\Administrator\Desktop\newfile.txt&quot;</span>))</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">while</span> (!sr.EndOfStream)</span><br><span class="line">               &#123;</span><br><span class="line">                   Console.WriteLine(sr.ReadLine());</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               Console.ReadKey();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//使用Streamwriter来读取一个文本文件</span></span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span>   <span class="keyword">void</span> <span class="title">StreamWriter</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">using</span> (StreamWriter  sw=<span class="keyword">new</span> System.IO.StreamWriter(<span class="string">@&quot;C:\Users\Administrator\Desktop\newfile.txt&quot;</span>,<span class="literal">true</span>))<span class="comment">//true是否追加</span></span><br><span class="line">           &#123;</span><br><span class="line">               sw.WriteLine(<span class="string">&quot;\n今天下雨了.&quot;</span>);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           Console.WriteLine(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//写入</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filestreamWrite</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">using</span> (FileStream  fsWrite=<span class="keyword">new</span> FileStream(<span class="string">@&quot;C:\Users\Administrator\Desktop\newfile.txt&quot;</span>, FileMode.OpenOrCreate,FileAccess.Write))</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="built_in">string</span> str = <span class="string">&quot;世界那么大，我想去看看&quot;</span>;</span><br><span class="line">               <span class="built_in">byte</span>[] buffer = Encoding.UTF8.GetBytes(str);</span><br><span class="line">               fsWrite.Write(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           Console.WriteLine(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line">           Console.ReadKey();</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//思路 ：  就是先将要复制的多媒体读取出来，然后再写入到你指定的位置</span></span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span>   <span class="keyword">void</span> <span class="title">copyFile</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           <span class="built_in">string</span> source = <span class="string">@&quot;C:\Users\Administrator\Desktop\mda-mc9ebdf7c7jfvj6x.mp4&quot;</span>;</span><br><span class="line">           <span class="built_in">string</span> targe = <span class="string">@&quot;C:\Users\Administrator\Desktop\mtyiimg\mda-mc9ebdf7c7jfvj6x.mp4&quot;</span>;</span><br><span class="line">           <span class="comment">//创建一个复制读取的流</span></span><br><span class="line">           <span class="keyword">using</span> (FileStream  fsread=<span class="keyword">new</span> FileStream(source, FileMode.Open, FileAccess.Read))</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               <span class="comment">//创建一个复制写入的流</span></span><br><span class="line">               <span class="keyword">using</span> (FileStream  fswrite=<span class="keyword">new</span> FileStream (targe,FileMode.OpenOrCreate,FileAccess.Write))</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>];</span><br><span class="line">                   <span class="comment">//因为文件可能会比较大，所以我们在读取的时候  应该通过一个循环去读取</span></span><br><span class="line">                   <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="comment">//返回本次读取实际读取到的字节数</span></span><br><span class="line">                       <span class="built_in">int</span> r = fsread.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                       <span class="keyword">if</span> (r==<span class="number">0</span>)</span><br><span class="line">                       &#123;</span><br><span class="line">                           <span class="keyword">break</span>;</span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                       fswrite.Write(buffer, <span class="number">0</span>, r);</span><br><span class="line">                   &#125;</span><br><span class="line">                   </span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           Console.WriteLine(<span class="string">&quot;复制成功&quot;</span>);</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><h3 id="实现多态的方法——-gt-gt-虚方法"><a href="#实现多态的方法——-gt-gt-虚方法" class="headerlink" title="实现多态的方法——&gt;&gt;虚方法"></a>实现多态的方法——&gt;&gt;虚方法</h3><ol><li><p>将父类的方法标记为虚方法，用关键字virtual，这个函数可以被子类重新写一遍。 </p></li><li><p>子类的方法前面加override关键字</p></li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Function1</span>()</span> </span><br><span class="line">&#123;</span><br><span class="line">   Console.WriteLine(<span class="string">&quot;我是中国人&#123;0&#125;&quot;</span>, <span class="keyword">this</span>.Name); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现多态的方法——-gt-gt-抽象类"><a href="#实现多态的方法——-gt-gt-抽象类" class="headerlink" title="实现多态的方法——&gt;&gt;抽象类"></a>实现多态的方法——&gt;&gt;抽象类</h3><p>当父类的方法不知道怎么去实现后，可以考虑将父类写成抽象类，将方法写成抽象方法。</p><p>知道怎么实现，用虚方法实现多态就行了。不知道怎么实现，就使用抽象类来实现。</p><p>抽象类不能创建对象</p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220612212038691.png" alt="233"></p><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220612212328527.png" alt="233"></p><h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220612212649956.png" alt="233"></p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p><img src="/2022/06/17/c-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9/image-20220612213851094.png" alt="233"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 接口</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">//接口就是一个规范，能力。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CHSS</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;我是人，可以玩&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NBAPlayer</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Koulan</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;我是NBAplayer，可以扣篮&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span> : <span class="title">Person</span> , <span class="title">IKouLanable</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">KouLan</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;我也会扣篮&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IKouLanable</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">KouLan</span>()</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>云顶S7万龙皆C秘籍</title>
      <link href="/2022/06/16/%E4%BA%91%E9%A1%B6S7%E4%B8%87%E9%BE%99%E7%9A%86C%E7%A7%98%E7%B1%8D/"/>
      <url>/2022/06/16/%E4%BA%91%E9%A1%B6S7%E4%B8%87%E9%BE%99%E7%9A%86C%E7%A7%98%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>主要装备：羊刀</p><p>1.开局观察幻境效果，海盗则留幻境牌打工。</p><p>2-1选通用类走运营。2-1能合狂徒，板甲直接合成，稳定血量。羊刀也直接合成。没有就后面选秀抢一个合成。</p><p>前期连胜要素：两星卡数量。</p><p>3-2选秀继续选通用类效果</p><p>7级为重点，找一条龙。谁先来，谁更多就玩谁。看对手玩什么，什么玩的少，玩什么。【都可以带羊刀】</p><p>赛芬的装备： 饮血剑（核心），羊刀，水银，无尽，无尽，针对对手的肉装（次要）</p><p>石傲玉：饮血剑，泰坦（核心）羊刀，无尽，无尽，针对对手的肉装（次要）</p><p>迭嘉：羊刀，水银（核心）【决斗大师的幻境效果，羊刀可以不要】，帽子，法爆，大天使，科技枪（次要）</p><p>***前期不卡钱的情况下，一费的宝石，卡尔马雷欧娜各留一张，后面可能会用到</p><p>最后选择：</p><p>1.幻境龙，选择的话看幻境的效果。</p><p>如果是海盗，8幻境收益才高，上分不稳。</p><p>猛将的荣耀，需要连胜加buff，太晚了，放弃。</p><p>雷霆过载是近战，放弃</p><p>其他的效果都可以玩。</p><p>前期合成了羊刀，又遇到决斗幻境。就刷一个重铸器，换掉羊刀即可。</p><p>阵容：雷欧娜，永恩，努努，迭嘉。 人马凑重骑兵。露露放在迭嘉旁边加攻速。出了两星亚索，则当副C。</p><p>一般努努当副C，追3星。狂徒+续航和法强装备。尽可能偏肉，黎明幻境则可以带输出。有8幻境上8幻境，没有则上五费卡。</p><p>首选巴德。如果没刺客，迭嘉放在第三排或者第二排。人马对位。</p><p>骚套路，神龙烈焰迭嘉，纹章之书。</p><p>2.幽影龙</p><p>6幽影才有用。赛芬先打工，2星或者牌来了在打。</p><p>（1）6幽影4格斗</p><p>主C赛芬：羊刀+水银+饮血  无尽泰坦和防御装备也可以出</p><p>副C：派克：输出装备+续航</p><p>（2）6幽影4换形蜘蛛  </p><p>蜘蛛：羊刀+水银+饮血 幽影之心</p><p>赛芬：饮血+肉装</p><p>7级搜出3星蜘蛛，8人口上宝石。补一个旗子。</p><p>蜘蛛，赛芬，纳尔，乌鸦，妮蔻，锤石，塞拉斯</p><p>（3）维鲁斯体系</p><p>EZ+维鲁斯+俄洛依+奥恩+塞拉斯+赛芬</p><p>前期没维鲁斯同行</p><p>维鲁斯：羊刀，杀人剑&#x2F;青龙刀，水银&#x2F;夜之锋刃</p><p>抽牌的时候凑个3星界龙在抽</p><p>3.玉龙</p><p>3-2之前白嫖出石傲玉</p><p>主肉的石傲玉不能带羊刀，前期带羊刀容易连胜。</p><p>6玉龙2秘书</p><p>石傲玉：饮血，泰坦，羊刀</p><p>6玉龙加露露，宝石和卡尔马可以直接上场</p><p>血多直接上8，血少先稳质量后上8。不急合成装备。</p><p>9级优先9玉龙，肉装全部给妮蔻当前排。</p><p>副C：冰鸟，青龙刀+输出装。冰鸟3星才有吃鸡能力。</p><p>4.龙神联盟和龙神部落</p><p>3-2或者4-2来了龙神，99%直接拿，送分</p><p>金鳞龙前排，不可替换。肉装自己带，输出装给C位。</p><p>龙王不推荐，有法装推荐，单上不如敖兴。</p><p>龙女，泰坦+续航。</p><p>其他都是强力输出，除了敖兴都可以带羊刀。谁先来给谁羊刀。</p><p>思路，决定C位后，就可以补充羁绊。迭嘉+亚索。赛芬+派克。敖兴+奥恩，龙女+妮蔻。石傲玉不用补。</p><p>上限最高，则敖兴，青龙刀，大天使，科技枪。两条龙当c，金鳞龙，亚索+巴德。</p><p>不推荐4个龙神。</p><p>5.怒翼羊刀</p><p>6怒翼龙+4幻形</p><p>乌鸦，霞，龙女，瑟提额，纳尔，寒冰，妮蔻</p><p>乌鸦羊刀水银，科技枪或者输出</p><p>龙女狂徒</p><p>3-1两星乌鸦，血量靠前能打。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello next</title>
      <link href="/2022/06/16/Hello-next/"/>
      <url>/2022/06/16/Hello-next/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
